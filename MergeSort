public class MergeSort {
	
	public static void main(String[] args) {
		int arr[] = new int[]{1,5,2,6,3,6};
		mergeSort(arr, 0, (arr.length - 1) );
		for (Integer item : arr)
		   System.err.print(item+",");
	}
	
	public static void mergeSort(int[] arr,int start, int end) {
		if (end == start) {
			return;
		}
		
		int mid = (end+start)/2;//mid 3/2=1
	
		mergeSort(arr, start, mid);
		mergeSort(arr, (mid+1), end);
		
		mergeBothArray(arr,start,mid,end);
	}
	
	private static void mergeBothArray(int[] arr, int start, int mid, int end) {
		int firstPointer = start, 
				current = 0,
				secPointer = (mid+1);//index =2
		int[] result = new int[(end - start + 1)];
		
		while (firstPointer < (mid+1) && secPointer <= end ) {		
			if (arr[firstPointer] > arr[secPointer]) {
				result[current++] = arr[secPointer++];
			} else {
				result[current++] = arr[firstPointer++];
			}
		}
		
//		1, 1, 1, 2, 2 -> 1, 1, 1    2, 2 -> 1, 1, 2, 2, 1
		while (firstPointer < (mid+1)) {
			result[current++] = arr[firstPointer++];
		}
	
		while (secPointer <= end) {
			result[current++] = arr[secPointer++];
		}
		
		for (int i = 0; i < result.length; start++,i++) {
			arr[start] = result[i];		
		}
		
	}
}
